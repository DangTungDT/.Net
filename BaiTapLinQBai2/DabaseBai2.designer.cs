#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaiTapLinQBai2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BaiTapLinQBai2")]
	public partial class DabaseBai2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietPB(ChiTietPB instance);
    partial void UpdateChiTietPB(ChiTietPB instance);
    partial void DeleteChiTietPB(ChiTietPB instance);
    partial void InsertHangHoa(HangHoa instance);
    partial void UpdateHangHoa(HangHoa instance);
    partial void DeleteHangHoa(HangHoa instance);
    partial void InsertKhoHang(KhoHang instance);
    partial void UpdateKhoHang(KhoHang instance);
    partial void DeleteKhoHang(KhoHang instance);
    partial void InsertPhanBo(PhanBo instance);
    partial void UpdatePhanBo(PhanBo instance);
    partial void DeletePhanBo(PhanBo instance);
    #endregion
		
		public DabaseBai2DataContext() : 
				base(global::BaiTapLinQBai2.Properties.Settings.Default.BaiTapLinQBai2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DabaseBai2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DabaseBai2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DabaseBai2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DabaseBai2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietPB> ChiTietPBs
		{
			get
			{
				return this.GetTable<ChiTietPB>();
			}
		}
		
		public System.Data.Linq.Table<HangHoa> HangHoas
		{
			get
			{
				return this.GetTable<HangHoa>();
			}
		}
		
		public System.Data.Linq.Table<KhoHang> KhoHangs
		{
			get
			{
				return this.GetTable<KhoHang>();
			}
		}
		
		public System.Data.Linq.Table<PhanBo> PhanBos
		{
			get
			{
				return this.GetTable<PhanBo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPB")]
	public partial class ChiTietPB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lanPB;
		
		private string _msHang;
		
		private System.Nullable<double> _soLuong;
		
		private string _GhiChu;
		
		private EntityRef<HangHoa> _HangHoa;
		
		private EntityRef<PhanBo> _PhanBo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlanPBChanging(string value);
    partial void OnlanPBChanged();
    partial void OnmsHangChanging(string value);
    partial void OnmsHangChanged();
    partial void OnsoLuongChanging(System.Nullable<double> value);
    partial void OnsoLuongChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ChiTietPB()
		{
			this._HangHoa = default(EntityRef<HangHoa>);
			this._PhanBo = default(EntityRef<PhanBo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanPB", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lanPB
		{
			get
			{
				return this._lanPB;
			}
			set
			{
				if ((this._lanPB != value))
				{
					if (this._PhanBo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlanPBChanging(value);
					this.SendPropertyChanging();
					this._lanPB = value;
					this.SendPropertyChanged("lanPB");
					this.OnlanPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msHang", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msHang
		{
			get
			{
				return this._msHang;
			}
			set
			{
				if ((this._msHang != value))
				{
					if (this._HangHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsHangChanging(value);
					this.SendPropertyChanging();
					this._msHang = value;
					this.SendPropertyChanged("msHang");
					this.OnmsHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Float")]
		public System.Nullable<double> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_ChiTietPB", Storage="_HangHoa", ThisKey="msHang", OtherKey="msHang", IsForeignKey=true)]
		public HangHoa HangHoa
		{
			get
			{
				return this._HangHoa.Entity;
			}
			set
			{
				HangHoa previousValue = this._HangHoa.Entity;
				if (((previousValue != value) 
							|| (this._HangHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangHoa.Entity = null;
						previousValue.ChiTietPBs.Remove(this);
					}
					this._HangHoa.Entity = value;
					if ((value != null))
					{
						value.ChiTietPBs.Add(this);
						this._msHang = value.msHang;
					}
					else
					{
						this._msHang = default(string);
					}
					this.SendPropertyChanged("HangHoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanBo_ChiTietPB", Storage="_PhanBo", ThisKey="lanPB", OtherKey="lanPB", IsForeignKey=true)]
		public PhanBo PhanBo
		{
			get
			{
				return this._PhanBo.Entity;
			}
			set
			{
				PhanBo previousValue = this._PhanBo.Entity;
				if (((previousValue != value) 
							|| (this._PhanBo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanBo.Entity = null;
						previousValue.ChiTietPBs.Remove(this);
					}
					this._PhanBo.Entity = value;
					if ((value != null))
					{
						value.ChiTietPBs.Add(this);
						this._lanPB = value.lanPB;
					}
					else
					{
						this._lanPB = default(string);
					}
					this.SendPropertyChanged("PhanBo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangHoa")]
	public partial class HangHoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msHang;
		
		private string _TenHang;
		
		private string _dvTinh;
		
		private EntitySet<ChiTietPB> _ChiTietPBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsHangChanging(string value);
    partial void OnmsHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    partial void OndvTinhChanging(string value);
    partial void OndvTinhChanged();
    #endregion
		
		public HangHoa()
		{
			this._ChiTietPBs = new EntitySet<ChiTietPB>(new Action<ChiTietPB>(this.attach_ChiTietPBs), new Action<ChiTietPB>(this.detach_ChiTietPBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msHang", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msHang
		{
			get
			{
				return this._msHang;
			}
			set
			{
				if ((this._msHang != value))
				{
					this.OnmsHangChanging(value);
					this.SendPropertyChanging();
					this._msHang = value;
					this.SendPropertyChanged("msHang");
					this.OnmsHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="NVarChar(100)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dvTinh", DbType="NVarChar(50)")]
		public string dvTinh
		{
			get
			{
				return this._dvTinh;
			}
			set
			{
				if ((this._dvTinh != value))
				{
					this.OndvTinhChanging(value);
					this.SendPropertyChanging();
					this._dvTinh = value;
					this.SendPropertyChanged("dvTinh");
					this.OndvTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangHoa_ChiTietPB", Storage="_ChiTietPBs", ThisKey="msHang", OtherKey="msHang")]
		public EntitySet<ChiTietPB> ChiTietPBs
		{
			get
			{
				return this._ChiTietPBs;
			}
			set
			{
				this._ChiTietPBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPBs(ChiTietPB entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = this;
		}
		
		private void detach_ChiTietPBs(ChiTietPB entity)
		{
			this.SendPropertyChanging();
			entity.HangHoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoHang")]
	public partial class KhoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _msKho;
		
		private string _DiaChiKho;
		
		private string _DienThoaiKho;
		
		private string _TenKhuKho;
		
		private EntitySet<PhanBo> _PhanBos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsKhoChanging(string value);
    partial void OnmsKhoChanged();
    partial void OnDiaChiKhoChanging(string value);
    partial void OnDiaChiKhoChanged();
    partial void OnDienThoaiKhoChanging(string value);
    partial void OnDienThoaiKhoChanged();
    partial void OnTenKhuKhoChanging(string value);
    partial void OnTenKhuKhoChanged();
    #endregion
		
		public KhoHang()
		{
			this._PhanBos = new EntitySet<PhanBo>(new Action<PhanBo>(this.attach_PhanBos), new Action<PhanBo>(this.detach_PhanBos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msKho", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string msKho
		{
			get
			{
				return this._msKho;
			}
			set
			{
				if ((this._msKho != value))
				{
					this.OnmsKhoChanging(value);
					this.SendPropertyChanging();
					this._msKho = value;
					this.SendPropertyChanged("msKho");
					this.OnmsKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKho", DbType="NVarChar(150)")]
		public string DiaChiKho
		{
			get
			{
				return this._DiaChiKho;
			}
			set
			{
				if ((this._DiaChiKho != value))
				{
					this.OnDiaChiKhoChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKho = value;
					this.SendPropertyChanged("DiaChiKho");
					this.OnDiaChiKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKho", DbType="NVarChar(16)")]
		public string DienThoaiKho
		{
			get
			{
				return this._DienThoaiKho;
			}
			set
			{
				if ((this._DienThoaiKho != value))
				{
					this.OnDienThoaiKhoChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKho = value;
					this.SendPropertyChanged("DienThoaiKho");
					this.OnDienThoaiKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhuKho", DbType="NVarChar(50)")]
		public string TenKhuKho
		{
			get
			{
				return this._TenKhuKho;
			}
			set
			{
				if ((this._TenKhuKho != value))
				{
					this.OnTenKhuKhoChanging(value);
					this.SendPropertyChanging();
					this._TenKhuKho = value;
					this.SendPropertyChanged("TenKhuKho");
					this.OnTenKhuKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoHang_PhanBo", Storage="_PhanBos", ThisKey="msKho", OtherKey="msKho")]
		public EntitySet<PhanBo> PhanBos
		{
			get
			{
				return this._PhanBos;
			}
			set
			{
				this._PhanBos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanBos(PhanBo entity)
		{
			this.SendPropertyChanging();
			entity.KhoHang = this;
		}
		
		private void detach_PhanBos(PhanBo entity)
		{
			this.SendPropertyChanging();
			entity.KhoHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanBo")]
	public partial class PhanBo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _lanPB;
		
		private string _msKho;
		
		private System.Nullable<System.DateTime> _ngayPB;
		
		private EntitySet<ChiTietPB> _ChiTietPBs;
		
		private EntityRef<KhoHang> _KhoHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlanPBChanging(string value);
    partial void OnlanPBChanged();
    partial void OnmsKhoChanging(string value);
    partial void OnmsKhoChanged();
    partial void OnngayPBChanging(System.Nullable<System.DateTime> value);
    partial void OnngayPBChanged();
    #endregion
		
		public PhanBo()
		{
			this._ChiTietPBs = new EntitySet<ChiTietPB>(new Action<ChiTietPB>(this.attach_ChiTietPBs), new Action<ChiTietPB>(this.detach_ChiTietPBs));
			this._KhoHang = default(EntityRef<KhoHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lanPB", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string lanPB
		{
			get
			{
				return this._lanPB;
			}
			set
			{
				if ((this._lanPB != value))
				{
					this.OnlanPBChanging(value);
					this.SendPropertyChanging();
					this._lanPB = value;
					this.SendPropertyChanged("lanPB");
					this.OnlanPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msKho", DbType="NVarChar(15)")]
		public string msKho
		{
			get
			{
				return this._msKho;
			}
			set
			{
				if ((this._msKho != value))
				{
					if (this._KhoHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmsKhoChanging(value);
					this.SendPropertyChanging();
					this._msKho = value;
					this.SendPropertyChanged("msKho");
					this.OnmsKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayPB", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ngayPB
		{
			get
			{
				return this._ngayPB;
			}
			set
			{
				if ((this._ngayPB != value))
				{
					this.OnngayPBChanging(value);
					this.SendPropertyChanging();
					this._ngayPB = value;
					this.SendPropertyChanged("ngayPB");
					this.OnngayPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanBo_ChiTietPB", Storage="_ChiTietPBs", ThisKey="lanPB", OtherKey="lanPB")]
		public EntitySet<ChiTietPB> ChiTietPBs
		{
			get
			{
				return this._ChiTietPBs;
			}
			set
			{
				this._ChiTietPBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoHang_PhanBo", Storage="_KhoHang", ThisKey="msKho", OtherKey="msKho", IsForeignKey=true)]
		public KhoHang KhoHang
		{
			get
			{
				return this._KhoHang.Entity;
			}
			set
			{
				KhoHang previousValue = this._KhoHang.Entity;
				if (((previousValue != value) 
							|| (this._KhoHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoHang.Entity = null;
						previousValue.PhanBos.Remove(this);
					}
					this._KhoHang.Entity = value;
					if ((value != null))
					{
						value.PhanBos.Add(this);
						this._msKho = value.msKho;
					}
					else
					{
						this._msKho = default(string);
					}
					this.SendPropertyChanged("KhoHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPBs(ChiTietPB entity)
		{
			this.SendPropertyChanging();
			entity.PhanBo = this;
		}
		
		private void detach_ChiTietPBs(ChiTietPB entity)
		{
			this.SendPropertyChanging();
			entity.PhanBo = null;
		}
	}
}
#pragma warning restore 1591
